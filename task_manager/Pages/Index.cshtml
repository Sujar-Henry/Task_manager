@page
@model task_manager.Pages.IndexModel
@{
    ViewData["Title"] = "Task Manager";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #222;
            color: #fff;
            margin: 20px;
        }

        h1, h2 {
            color: #dc3545;
            text-align: center;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background-color: #333;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }

        th, td {
            border: 1px solid #555;
            padding: 12px;
            text-align: left;
            color: #fff;
        }

        th {
            background-color: #dc3545;
        }

        form {
            margin-top: 15px;
            text-align: center;
        }

        button {
            background-color: #dc3545;
            color: #fff;
            padding: 10px 15px;
            border: none;
            cursor: pointer;
            border-radius: 4px;
        }

            button:hover {
                background-color: #c82333;
            }

        input {
            padding: 10px;
            margin: 5px;
            width: 100%;
            box-sizing: border-box;
        }
    </style>
</head>
<body>
    <h1>@ViewData["Title"]</h1>

    <h2>All Tasks</h2>
    <table>
        <thead>
            <tr>
                <th>Id</th>
                <th>Description</th>
                <th>Due Date</th>
                <th>Completion Status</th>
                <th>Actions</th>
                <th>Completion Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model.Tasks)
            {
                <tr>
                    <td>@task.Id</td>
                    <td>@task.Description</td>
                    <td>@task.DueDate.ToString("MM-dd-yyyy")</td>
                    <td>@(task.IsCompleted ? "Complete" : "Incomplete")</td>
                    <td>
                        <form method="post" asp-page-handler="RemoveTask">
                            <input type="hidden" name="taskId" value="@task.Id" />
                            <button type="submit">Remove</button>
                        </form>

                        <form method="post" asp-page-handler="MarkCompleted">
                            <input type="hidden" name="taskId" value="@task.Id" />
                            <button type="submit">Mark Complete</button>
                        </form>
                    </td>
                    <td>@(task.CompletionDate.HasValue ? task.CompletionDate.Value.ToString("MM-dd-yyyy") : "-")</td>
                </tr>
            }
        </tbody>
    </table>

    <h2>Edit Task</h2>
    <form method="post" asp-page-handler="UpdateTask">
        <label for="taskId">Task ID:</label>
        <input type="number" id="taskId" name="id" />

        <label for="newDescription">New Description:</label>
        <input type="text" id="newDescription" name="newDescription" placeholder="New Description" />

        <label for="newDueDate">New Due Date:</label>
        <input type="date" id="newDueDate" name="newDueDate" />

        <button type="submit">Edit</button>
    </form>

    <h2>Add Task</h2>
    <form method="post" asp-page-handler="AddTask">
        <label for="addTaskDescription">Description:</label>
        <input type="text" id="addTaskDescription" name="addTask.Description" placeholder="New Description" />

        <label for="addTaskDueDate">Due Date:</label>
        <input type="date" id="addTaskDueDate" name="addTask.DueDate" />

        <button type="submit">Add</button>
    </form>

    <br /><br />
</body>
</html>
